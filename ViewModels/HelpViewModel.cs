using System;
using System.Collections.ObjectModel;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Avalonia;
using Avalonia.Controls;
using ReactiveUI;
using System;
using System.Reactive;
using System.Reactive.Linq;
using System.ComponentModel;
using Avalonia;
using Avalonia.Styling;
using Avalonia.Controls;
using Avalonia.Themes.Fluent;
using System.Threading.Tasks;
using Documently.Models;


namespace Documently.ViewModels
{
    internal class HelpViewModel : ViewModelBase
    {
        string selectedItem;
        string showText;
        public List<string> Items { get; set; }
        public List<string> Text { get; set; }
        public string ShowText
        {
            get => showText;
            set => this.RaiseAndSetIfChanged(ref showText, value);
        }
        public string SelectedItem
        {
            get => selectedItem;
            set { selectedItem = value; ShowText = Text[Items.IndexOf(selectedItem)];  }
        }
        public HelpViewModel()
        {
            selectedItem = String.Empty;
            showText = String.Empty;
            Items = new List<string>();
            Text = new List<string>();

            Items.Add("Возможности системы");
            Items.Add("Выбор шаблона");
            Items.Add("Загрузка шаблона");
            Items.Add("Удаление шаблона");
            Items.Add("Заполнение шаблона");
            Items.Add("Сохранение шаблона");
            Items.Add("Пакетный режим");
            Items.Add("Категории");
            Items.Add("Формирование пользовательского шаблона");
            Items.Add("Тёмная тема");
            Items.Add("Обратная связь");
            
            Text.Add("Информационная система «ОкиДоки» – система автоматизации документооборота, " +
                "которая позволит пользователям по выбранному шаблону получать готовые документы, " +
                "заполняя при этом только содержательные данные." + "\n\n" + "Что умеет система?\n" +
                "- создание документа по выбранному шаблону,\n" +
                "- хранение шаблонов в базе данных,\n" +
                "- хранение готовых документов,\n" +
                "- вывод заполненных шаблонов в различных форматах,\n" +
                "- загрузка пользовательских шаблонов в базу данных,\n" +
                "- выбор шаблона по категориям,\n" +
                "- пакетный режим создания документов по шаблону,\n" +
                "- предпросмотр документа при заполнении,\n" +
                "- добавление / удаление пользовательских категорий");
            Text.Add("Для того, чтобы начать заполнение шаблона, в поле “Категории”" +
                " выберите интересующую вас категорию, а в ней подкатегорию," +
                " и в правом поле “Шаблоны” вам откроется список готовых для заполнения шаблонов.\n\n" + 
                "Система представляет свой список категорий и шаблонов:" +
                " договорные, информационные и распорядительные документы." +
                " Но вы добавить свою категорию и загрузить свой шаблон. " +
                "Как это сделать, вы можете узнать в пункте “Загрузка шаблона”.\n\n" +
                "Выделите поле интересующего вас шаблона щелчком мыши," +
                " поле с наименованием выбранного шаблона будет выделено синим цветом." + 
                "После этого вы можете заполнить шаблон или удалить его.");
            Text.Add("Для того, чтобы загрузить шаблон, в поле “Категории” " +
                "выберите интересующую вас категорию, а в ней, если нужно, подкатегорию.\n\n" +
                "После этого в панели инструментов выберите иконку “загрузить шаблон” " +
                "перед вами откроется диалоговое окно с файловой системой, " +
                "в ней вы можете выбрать интересующий вас шаблон и загрузить его в систему.\n\n" +
                "Файлы для шаблонов принимаются системой в следующих форматах: doc, docx, rtf, html, txt.");
            Text.Add("Перед тем, как удалить шаблон, необходимо его выбрать (см. пункт “выбор шаблона”)." +
                " После этого в панели инструментов выберите иконку “Удаление шаблона”");
            Text.Add("После того, как вами был выбран нужный шаблон, вам необходимо " +
                "нажать на иконку “Заполнить шаблон” и указать количество экземпляров для заполнения.\n\n" +
                "Вы перейдете в форму заполнения полей шаблона." +
                "Слева представлены поля шаблона, сгруппированные по категориям (если они есть). " +
                "Справа представлен предварительный просмотр документа, по которому вы можете отслеживать заполнение полей.");
            Text.Add("Когда вы заполнили все необходимые поля и решили сохранить получившийся документ," +
                " в панели инструментов выберите иконку “Сохранить”. " +
                "Перед вами откроется диалоговое окно, и в нем вы сможете выбрать директорию" +
                " сохранения заполненного шаблона, его имя и формат. " +
                "Нажмите на кнопку сохранить и шаблон будет сохранен.");
            Text.Add("Система поддерживает пакетный режим создания документа.\n\n" +
                "При нажатии иконки “Заполнить шаблон” вы увидите диалоговое окно, " +
                "предлагающее ввести количество экземпляров для заполнения.\n\n" +
                "Указав нужное количество, вы перейдете в форму заполнения шаблона.\n\n" +
                "Переключение между формами заполнения экземпляров производится по стрелкам, " +
                "расположенным в центральной части панели инструментов.");
            Text.Add("Вы можете самостоятельно изменить коллекцию шаблонов в системе, " +
                "добавив, удалив или переименовав категории.\n\n" +
                "Если вы удалите пользовательскую категорию, то системные шаблоны, " +
                "входящие в категорию, пропадут из системы.");
            Text.Add("Для того, чтобы загрузить в систему и заполнять собственный шаблон," +
                " вам необходимо самостоятельно подготовить его в любом из предложенных форматах: doc, docx, rtf, html, txt." +
                "В местах для заполнения данных необходимо ввести обозначения, " +
                "по которым будет формироваться поле для заполнения - тег.\n\n" +
                "Тег должен быть заключен в знаки <>. Внутри тег должен содержать название поля для заполнения. " +
                "Например, тег для заполнения фамилии: < Фамилия >.\n\n" +
                "Если вы хотите сгруппировать поля по каким-то категориям " +
                "для более удобного заполнения шаблона, необходимо указывать категорию через двоеточие. " +
                "Например, теги < ФИО > и < ПаспортныеДанные > относятся к одному покупателю. " +
                "Тогда можно объединить их заполнение, указав категорию < ФИО:Покупатель > и " +
                "< ПаспортныеДанные:Покупатель >.");
            Text.Add("Для вашего удобства была разработана темная тема. " +
                "Вы можете включить, нажав на значок “Переключить тему”.");
            Text.Add("Подробнее с системой вы можете ознакомится в руководстве " +
                "пользователя в папке Documentation. Если у вас остались какие-то вопросы, " +
                "вы можете связаться с нами, написав на почту okidoki.positive@mail.ru");

        }
    }
}
